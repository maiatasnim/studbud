{"mappings":"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","sources":["public/components/stopwatch.js"],"sourcesContent":["// Tutorials https://tinloof.com/blog/how-to-build-a-stopwatch-with-html-css-js-react-part-2, \r\n// https://www.youtube.com/watch?v=1INmsFnD-u4,\r\n// https://www.sitepoint.com/community/t/javascript-how-to-make-laps-in-the-stopwatch/244936,\r\n// https://www.youtube.com/watch?v=49f1cjZWRJA, \r\n\r\n// Define variables to hold time values\r\nvar seconds = 0;\r\nvar minutes = 0;\r\nvar hours = 0;\r\n\r\n// Define variables to hold \"display\" values\r\nvar displaySeconds = 0;\r\nvar displayMinutes = 0;\r\nvar displayHours = 0;\r\n\r\n// Define variable for setInterval() function\r\nlet interval = null;\r\n\r\n// Define variable to hold stopwatch status, by default it is paused\r\nlet watchStatus = \"paused\";\r\n\r\n// Selector for the lap outputs\r\nvar lap = document.getElementById('lapButton');\r\nvar lapList = document.getElementById('lapsList');\r\n\r\n// Records last lap\r\nvar lastLap = { seconds: 0, minutes: 0, hours: 0 };\r\n\r\n// Stopwatch function (logic to determine when to increment next value, etc.)\r\nfunction playTimer() {\r\n\r\n    seconds++;\r\n\r\n    // Logic to determine when to increment next value\r\n    if (seconds / 60 === 1) {\r\n        \r\n        seconds = 0;\r\n        minutes++;\r\n\r\n        if (minutes / 60 === 1) {\r\n            minutes = 0;\r\n            hours++;\r\n        }\r\n\r\n    }\r\n\r\n    // Update displayed value to add a 0 if there's only one digit\r\n    if (seconds < 10) {\r\n        displaySeconds = \"0\" + seconds.toString();\r\n    }\r\n    else {\r\n        displaySeconds = seconds;\r\n    }\r\n\r\n    if (minutes < 10) {\r\n        displayMinutes = \"0\" + minutes.toString();\r\n    }\r\n    else {\r\n        displayMinutes = minutes;\r\n    }\r\n\r\n    if (hours < 10) {\r\n        displayHours = \"0\" + hours.toString();\r\n    }\r\n    else {\r\n        displayHours = hours;\r\n    }\r\n\r\n    // Display updated time value to user\r\n    document.getElementById(\"timer\").innerHTML = displayHours + \":\" + displayMinutes + \":\" + displaySeconds;\r\n\r\n}\r\n\r\n\r\n// Functionality for start/stop button\r\nstartStop.addEventListener(\"click\", function startStop(){\r\n\r\n    if (watchStatus === \"paused\") {\r\n\r\n        // Start the stopwatch (by calling the setInterval() function)\r\n        interval = window.setInterval(playTimer, 1000);\r\n        document.getElementById(\"startStop\").innerHTML = \"stop\";\r\n        watchStatus = \"started\";\r\n\r\n    }\r\n    else {\r\n        \r\n        // Default button status\r\n        window.clearInterval(interval);\r\n        document.getElementById(\"startStop\").innerHTML = \"start\";\r\n        watchStatus = \"paused\";\r\n\r\n    }\r\n\r\n})\r\n\r\n//Function to reset the stopwatch\r\nresetButton.addEventListener(\"click\", function reset(){\r\n\r\n    window.clearInterval(interval);\r\n    seconds = 0;\r\n    minutes = 0; \r\n    hours = 0;\r\n    document.getElementById(\"timer\").innerHTML = \"00:00:00\";\r\n    document.getElementById(\"startStop\").innerHTML = \"start\";\r\n\r\n});\r\n\r\nlapButton.addEventListener(\"click\", function lap() {\r\n//     lapList.innerHTML += \"<li>\" + timer.innerHTML + \"</li>\";\r\n// });\r\n\r\n    var lapSeconds = seconds - lastLap.seconds;\r\n    var lapMinutes = minutes - lastLap.minutes;\r\n    var lapHours = hours - lastLap.hours;\r\n    \r\n    lastLap = {\r\n    hours: hours,\r\n    minutes: minutes,\r\n    seconds: seconds\r\n    };\r\n\r\n    lapList.innerHTML += \"<li>\" + leftLaps(lapHours) + \":\" + leftLaps(lapMinutes) + \":\" + leftLaps(lapSeconds) + \"</li>\";\r\n  \r\n})\r\n\r\nfunction leftLaps(value) {\r\n    if (value >= 0) {\r\n        return value < 10 ? ('0' + value) : value;\r\n    }\r\n    else if (value <= 0) {\r\n        return value < 10 ? ('0' + -value) : value;\r\n    }\r\n}\r\n\r\nclearLaps.addEventListener(\"click\", function clear() {\r\n    lapList.innerHTML = '';\r\n})\r\n"],"names":[],"version":3,"file":"stopwatch.0f6aa93c.js.map","sourceRoot":"/__parcel_source_root/"}